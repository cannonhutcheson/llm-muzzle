###############################################################################
#
#  Welcome to Baml! To use this generated code, please run the following:
#
#  $ pip install baml-py
#
###############################################################################

# This file was generated by BAML: please do not edit it. Instead, edit the
# BAML files and re-generate this code.
#
# ruff: noqa: E501,F401
# flake8: noqa: E501,F401
# pylint: disable=unused-import,line-too-long
# fmt: off

file_map = {
    
    "clients.baml": "// Learn more about clients at https://docs.boundaryml.com/docs/snippets/clients/overview\n\nclient<llm> CustomGPT4o {\n  provider openai\n  options {\n    model \"gpt-4o\"\n    api_key env.OPENAI_API_KEY\n  }\n}\n\nclient<llm> CustomGPT4oMini {\n  provider openai\n  retry_policy Exponential\n  options {\n    model \"gpt-4o-mini\"\n    api_key env.OPENAI_API_KEY\n  }\n}\n\nclient<llm> CustomSonnet {\n  provider anthropic\n  options {\n    model \"claude-3-5-sonnet-20241022\"\n    api_key env.ANTHROPIC_API_KEY\n  }\n}\n\n\nclient<llm> CustomHaiku {\n  provider anthropic\n  retry_policy Constant\n  options {\n    model \"claude-3-haiku-20240307\"\n    api_key env.ANTHROPIC_API_KEY\n  }\n}\n\n// https://docs.boundaryml.com/docs/snippets/clients/round-robin\nclient<llm> CustomFast {\n  provider round-robin\n  options {\n    // This will alternate between the two clients\n    strategy [CustomGPT4oMini, CustomHaiku]\n  }\n}\n\n// https://docs.boundaryml.com/docs/snippets/clients/fallback\nclient<llm> OpenaiFallback {\n  provider fallback\n  options {\n    // This will try the clients in order until one succeeds\n    strategy [CustomGPT4oMini, CustomGPT4oMini]\n  }\n}\n\n// https://docs.boundaryml.com/docs/snippets/clients/retry\nretry_policy Constant {\n  max_retries 3\n  // Strategy is optional\n  strategy {\n    type constant_delay\n    delay_ms 200\n  }\n}\n\nretry_policy Exponential {\n  max_retries 2\n  // Strategy is optional\n  strategy {\n    type exponential_backoff\n    delay_ms 300\n    multiplier 1.5\n    max_delay_ms 10000\n  }\n}\n",
    "generators.baml": "// This helps use auto generate libraries you can use in the language of\n// your choice. You can have multiple generators if you use multiple languages.\n// Just ensure that the output_dir is different for each generator.\ngenerator target {\n    // Valid values: \"python/pydantic\", \"typescript\", \"ruby/sorbet\", \"rest/openapi\"\n    output_type \"python/pydantic\"\n\n    // Where the generated code will be saved (relative to baml_src/)\n    output_dir \"../\"\n\n    // The version of the BAML package you have installed (e.g. same version as your baml-py or @boundaryml/baml).\n    // The BAML VSCode extension version should also match this version.\n    version \"0.89.0\"\n\n    // Valid values: \"sync\", \"async\"\n    // This controls what `b.FunctionName()` will be (sync or async).\n    default_client_mode sync\n}\n",
    "sentences.baml": "// ---------------------------------------\n// Output Schemas\n// ---------------------------------------\n\nclass SentenceResponse {\n    sentence string\n} // SentenceResponse\n\nclass Punctuate {\n    reason string? @description(#\"\n        Explanation of why the text is ending, e.g 'Not enough words remaining' or, in rare cases 'Sufficiently described'\n    \"#)\n} // Punctuate\n\nclass Error {\n    reason string? @description(#\"\n        An explanation of why an error is being thrown, such as prompt injection, etc.\n    \"#)\n} // Error\n\n// -------------------------------------\n// Generation Functions\n// -------------------------------------\n\n// Generates the seed sentence - the first sentence of the response.\nfunction GenFirstSentence(request: string, limit: int) -> SentenceResponse | Error {\n\n    client CustomGPT4oMini\n    prompt #\"\n        You are a completion tool that is used to write the first sentence of a response to the following prompt:\n        BEGINPROMPT\n        {{ request }}\n        ENDPROMPT\n        Keeping in mind that the total answer (including subsequent sentences) must conform to a {{ limit }} word limit. Generate the first sentence.\n        {{ ctx.output_format }}\n    \"#\n} // GenFirstSentence\n\n// Generates the next sentence or returns a Punctuate object.\nfunction GenNextSentence(request: string, limit: int, generated: string) -> SentenceResponse | Punctuate {\n    client CustomGPT4oMini\n    prompt #\"\n        You are a completions tool used to generate the next sentence or end the text in the following paragraph (note, we want to approach the word limit asymtotically. Meaning, if there are many more words left available, synthesize more):\n        BEGINQUOTE\n        {{ generated }}\n        ENDQUOTE\n        Which is being used to respond to the following prompt:\n        BEGINQUOTE\n        {{ request }}\n        ENDQUOTE\n        The remaining word limit is {{ limit }}\n        {{ ctx.output_format }}\n    \"#\n} // GenNextSentence\n\n\n// Testing\n\n\ntest first {\n    functions [GenFirstSentence]\n    args {\n        request  #\"\n            Explain the role of the Pope in the Catholic Church.\n        \"#\n        limit 50\n    }\n} // first\n\ntest second {\n    functions [GenNextSentence]\n    args {\n        request  #\"\n            Explain the role of the Pope in the Catholic Church.\n        \"#\n        limit 22\n        generated #\"\n            The Pope serves as the spiritual leader of the Catholic Church, guiding its members in faith and doctrine while representing the Church in global religious and social matters.\n        \"#\n        \n    }\n}\n\ntest third {\n    functions [GenNextSentence]\n    args {\n        request  #\"\n            Explain the role of the Pope in the Catholic Church. \n        \"#\n        limit 6\n        generated #\"\n            The Pope serves as the spiritual leader of the Catholic Church, guiding its members in faith and doctrine while representing the Church in global religious and social matters. Additionally, the Pope provides moral guidance, addresses social justice issues, and fosters ecumenical dialogue with other faiths.\n        \"#\n    }\n}\n",
    "words.baml": "\nclass CompletionHalt {\n    reason string @description(#\"\n        The reason completion is being halted, \n        e.g. 'Response finished satisfactorily'\n        or\n        'Out of remaining words.'\n    \"#)\n} // \n\nclass InitBlock {\n    prompt string\n    limit int @description(#\"\n        Words left in total response.\n    \"#)\n} // InitBlock\n\n\nclass ContextBlock {\n    prompt string\n    limit int @description(#\"\n        Words left in total response.\n    \"#)\n    generated string @description(#\"\n        Text generated thus far.\n    \"#)\n} // ContextBlock\n\nclass Response {\n    word string @description(#\"\n        The best next word. Limit to 1 word.\n    \"#)\n}\n\nfunction InitOutput(init: InitBlock) -> Response {\n    client \"openai/gpt-4o-mini\"\n    prompt #\"\n        Based on {{ init }},\n        {{ ctx.output_format }}\n    \"#\n} // NextWork\n\nfunction GeneralOutput(block: ContextBlock) -> Response {\n    client \"openai/gpt-4o-mini\"\n    prompt #\"\n        Based on {{ block }}\n        {{ ctx.output_format }}\n    \"#\n} // GeneralOutput\n\nfunction Genesis(request: string, limit: int) -> Response {\n    client \"openai/gpt-4o-mini\"\n    prompt #\"\n        You are a completion tool that is trying to output an answer to the following prompt\n        {{ request }}\n        in {{ limit }} words at most. You are to generate the first word of the sentence (usually 'The')\n        {{ ctx.output_format }}\n    \"#\n}\n\nfunction Output(request: string, limit: int, generated: string) -> Response | CompletionHalt {\n    client \"openai/gpt-4o-mini\"\n    prompt #\"\n        You are a completion tool, answering \n        BEGINREQUEST\n        {{ request }}\n        END REQUEST\n        one word at a time, using proper capitalization and punctuation (even if the request has flawed grammar or punctuation), building on what has already been generated:\n        BEGINQUOTE\n        {{ generated }}\n        ENDQUOTE\n        You have {{ limit }} words remaining in the total answer. Remember that if the prev word ends in a period, the next word must begin a new sentence. Synthesize based on the request and answer thus far rather than summarizing them. Don't be repetitive in theme or style.\n        {{ ctx.output_format }}\n    \"#\n} // Output\n\ntest genesis {\n    functions [Genesis] \n    args {\n        request \"Explain the role of the Pope in the Roman Catholic Church.\"\n        limit 20\n    }\n}\n\ntest output {\n    functions [Output]\n    args {\n        request \"Explain the role of the pope in the rc church\"\n        limit 49\n        generated \"The\"\n    }\n}\n\ntest output1 {\n    functions [Output]\n    args {\n        request \"Explain the role of the pope in the rc church\"\n        limit 48\n        generated \"The Pope\"\n    }\n}\n\ntest output2 {\n    functions [Output]\n    args {\n        request \"Explain the role of the pope in the rc church\"\n        limit 47\n        generated \"The Pope serves\"\n    }\n}\n\ntest output3 {\n    functions [Output]\n    args {\n        request \"Explain the role of the pope in the rc church\"\n        limit 46\n        generated \"The Pope serves as\"\n    }\n}\n\n\ntest output4 {\n    functions [Output]\n    args {\n        request \"Explain the role of the pope in the rc church\"\n        limit 45\n        generated \"The Pope serves as the\"\n    }\n}\n\ntest output5 {\n    functions [Output]\n    args {\n        request \"Explain the role of the pope in the rc church\"\n        limit 44\n        generated \"The Pope serves as the leader\"\n    }\n}\n\ntest output6 {\n    functions [Output]\n    args {\n        request \"Explain the role of the pope in the rc church\"\n        limit 43\n        generated \"The Pope serves as the leader of\"\n    }\n}\n\ntest output7 {\n    functions [Output]\n    args {\n        request \"Explain the role of the pope in the rc church\"\n        limit 42\n        generated \"The Pope serves as the leader of the\"\n    }\n}\n\ntest output8 {\n    functions [Output]\n    args {\n        request \"Explain the role of the pope in the rc church\"\n        limit 41\n        generated \"The Pope serves as the leader of the Roman\"\n    }\n}\n\ntest output9 {\n    functions [Output]\n    args {\n        request \"Explain the role of the pope in the rc church\"\n        limit 40\n        generated \"The Pope serves as the leader of the Roman Catholic\"\n    }\n}\n\ntest output10 {\n    functions [Output]\n    args {\n        request \"Explain the role of the pope in the rc church\"\n        limit 39\n        generated \"The Pope serves as the leader of the Roman Catholic Church,\"\n    }\n}\n\ntest output11 {\n    functions [Output]\n    args {\n        request \"Explain the role of the pope in the rc church\"\n        limit 38\n        generated \"The Pope serves as the leader of the Roman Catholic Church, providing\"\n    }\n}\n\ntest output12 {\n    functions [Output]\n    args {\n        request \"Explain the role of the pope in the rc church\"\n        limit 37\n        generated \"The Pope serves as the leader of the Roman Catholic Church, providing guidance.\"\n    }\n}\n\ntest output13 {\n    functions [Output]\n    args {\n        request \"Explain the role of the pope in the rc church\"\n        limit 36\n        generated \"The Pope serves as the leader of the Roman Catholic Church, providing guidance. His\"\n    }\n}\n\ntest output14 {\n    functions [Output]\n    args {\n        request \"Explain the role of the pope in the rc church\"\n        limit 35\n        generated \"The Pope serves as the leader of the Roman Catholic Church, providing guidance. His authority\"\n    }\n}\n\ntest output15 {\n    functions [Output]\n    args {\n        request \"Explain the role of the pope in the rc church\"\n        limit 34\n        generated \"The Pope serves as the leader of the Roman Catholic Church, providing guidance. His authority is\"\n    }\n}\n\ntest output16 {\n    functions [Output]\n    args {\n        request \"Explain the role of the pope in the rc church\"\n        limit 3\n        generated \"The Pope serves as the leader of the Roman Catholic Church, providing guidance. His authority is\"\n    }\n}\n\ntest output17 {\n    functions [Output]\n    args {\n        request \"Explain the role of the pope in the rc church\"\n        limit 2\n        generated \"The Pope serves as the leader of the Roman Catholic Church, providing guidance. His authority is spiritual\"\n    }\n}\n\ntest output18 {\n    functions [Output]\n    args {\n        request \"Explain the role of the pope in the rc church\"\n        limit 1\n        generated \"The Pope serves as the leader of the Roman Catholic Church, providing guidance. His authority is spiritual and administrative.\"\n    }\n}",
}

def get_baml_files():
    return file_map